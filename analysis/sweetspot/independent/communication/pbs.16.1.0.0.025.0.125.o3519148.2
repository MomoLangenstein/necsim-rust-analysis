# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 10379423442105353571,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519148[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 16 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx3-5-22.cx3.hpc.ic.ac.uk:16
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 15:04:06 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 10379423442105353571,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3519148[2].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx3-5-22.cx3.hpc.ic.ac.uk:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 10379423442105353571,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.125 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3519148[2].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7ffcc3c209a8; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7ffcc3c209c8; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3519148[2].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 16 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 11.938825776s
 - execution: 8.444158913s
 - cleanup: 95.322837ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 38.61022565756477 after 105304286 steps.

# mpiexec: finished at Thu 13 May 15:04:34 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000010757646995429582,
                ),
                max_time: PositiveF64(
                    0.0 < 27.206608086372988,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000014258150771162548,
                ),
                max_time: PositiveF64(
                    0.0 < 28.337167085130147,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000002370754675906639,
                ),
                max_time: PositiveF64(
                    0.0 < 28.873312017585402,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000030462141975551305,
                ),
                max_time: PositiveF64(
                    0.0 < 23.92718548384796,
                ),
                length: 573711,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005857420271038194,
                ),
                max_time: PositiveF64(
                    0.0 < 34.933578845811596,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006193454610281535,
                ),
                max_time: PositiveF64(
                    0.0 < 27.594011050058718,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007699945597794411,
                ),
                max_time: PositiveF64(
                    0.0 < 28.857892231874402,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000009093124309078604,
                ),
                max_time: PositiveF64(
                    0.0 < 31.099795037739995,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010058385874200937,
                ),
                max_time: PositiveF64(
                    0.0 < 27.965191260241404,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010887438589568532,
                ),
                max_time: PositiveF64(
                    0.0 < 29.377169535585704,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015086454890900214,
                ),
                max_time: PositiveF64(
                    0.0 < 31.849864664523352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000015788069573918762,
                ),
                max_time: PositiveF64(
                    0.0 < 26.88320747031259,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000017296976240199768,
                ),
                max_time: PositiveF64(
                    0.0 < 26.229273237751496,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000017920840228446977,
                ),
                max_time: PositiveF64(
                    0.0 < 26.08463073826997,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001969757251751858,
                ),
                max_time: PositiveF64(
                    0.0 < 29.151570710369803,
                ),
                length: 560360,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000231978138642841,
                ),
                max_time: PositiveF64(
                    0.0 < 34.31448817668841,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000002557679126824475,
                ),
                max_time: PositiveF64(
                    0.0 < 30.454491563301897,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000026591999047198556,
                ),
                max_time: PositiveF64(
                    0.0 < 25.852794258958557,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000322031620536567,
                ),
                max_time: PositiveF64(
                    0.0 < 26.34215589346119,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003285458335944291,
                ),
                max_time: PositiveF64(
                    0.0 < 28.091790962625367,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003295965528282707,
                ),
                max_time: PositiveF64(
                    0.0 < 34.31304266389978,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000033941918553548334,
                ),
                max_time: PositiveF64(
                    0.0 < 31.484770354200293,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003495896783167751,
                ),
                max_time: PositiveF64(
                    0.0 < 28.6065590935911,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003663939393550031,
                ),
                max_time: PositiveF64(
                    0.0 < 33.708256450681276,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003681891558304784,
                ),
                max_time: PositiveF64(
                    0.0 < 28.789730154040917,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004019724877957209,
                ),
                max_time: PositiveF64(
                    0.0 < 26.85098643066922,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000042720139037388805,
                ),
                max_time: PositiveF64(
                    0.0 < 33.28527904184132,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000043248701314668736,
                ),
                max_time: PositiveF64(
                    0.0 < 25.921375898263484,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004442057993658821,
                ),
                max_time: PositiveF64(
                    0.0 < 25.417420775615884,
                ),
                length: 598335,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000046627778055308156,
                ),
                max_time: PositiveF64(
                    0.0 < 28.219341060658873,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005008220432811683,
                ),
                max_time: PositiveF64(
                    0.0 < 27.121064839362703,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005069990582917683,
                ),
                max_time: PositiveF64(
                    0.0 < 26.216488606849104,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005149860515807347,
                ),
                max_time: PositiveF64(
                    0.0 < 27.771402897285412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005215148060622177,
                ),
                max_time: PositiveF64(
                    0.0 < 31.094049624644953,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000522652687240388,
                ),
                max_time: PositiveF64(
                    0.0 < 27.51475037381978,
                ),
                length: 581305,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005526373750286417,
                ),
                max_time: PositiveF64(
                    0.0 < 27.11640093579493,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006759814255574703,
                ),
                max_time: PositiveF64(
                    0.0 < 27.026478618605484,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000675984610787328,
                ),
                max_time: PositiveF64(
                    0.0 < 25.15086633490238,
                ),
                length: 587984,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007156684211917508,
                ),
                max_time: PositiveF64(
                    0.0 < 29.884678694067055,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007216447922564484,
                ),
                max_time: PositiveF64(
                    0.0 < 28.715266018409867,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007581510425014315,
                ),
                max_time: PositiveF64(
                    0.0 < 29.849111006696944,
                ),
                length: 552197,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007886544303725707,
                ),
                max_time: PositiveF64(
                    0.0 < 30.62488416087234,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007912352639749543,
                ),
                max_time: PositiveF64(
                    0.0 < 28.514768915184483,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008765581194225547,
                ),
                max_time: PositiveF64(
                    0.0 < 25.824299968016938,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009233340705905313,
                ),
                max_time: PositiveF64(
                    0.0 < 28.645901211967768,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009545332138594098,
                ),
                max_time: PositiveF64(
                    0.0 < 25.95061439047415,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000009691982841286695,
                ),
                max_time: PositiveF64(
                    0.0 < 29.14000670482281,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010585433565801772,
                ),
                max_time: PositiveF64(
                    0.0 < 27.431154662265218,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010999421001800513,
                ),
                max_time: PositiveF64(
                    0.0 < 26.78668446079728,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011130829563610334,
                ),
                max_time: PositiveF64(
                    0.0 < 24.945681085255153,
                ),
                length: 587070,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012547256028616616,
                ),
                max_time: PositiveF64(
                    0.0 < 30.01519177698396,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012863769840998351,
                ),
                max_time: PositiveF64(
                    0.0 < 38.61022565756477,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001380875387091418,
                ),
                max_time: PositiveF64(
                    0.0 < 29.492245285444785,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013875023222031935,
                ),
                max_time: PositiveF64(
                    0.0 < 32.21984462987809,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014373356901908885,
                ),
                max_time: PositiveF64(
                    0.0 < 31.384915474275914,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001516155749003989,
                ),
                max_time: PositiveF64(
                    0.0 < 27.13206849906765,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001572965434570861,
                ),
                max_time: PositiveF64(
                    0.0 < 27.2129622965143,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016302519117994407,
                ),
                max_time: PositiveF64(
                    0.0 < 29.684477536963033,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016379089662343915,
                ),
                max_time: PositiveF64(
                    0.0 < 27.737176491403815,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000016426899265842287,
                ),
                max_time: PositiveF64(
                    0.0 < 28.08981048253309,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001696264759210031,
                ),
                max_time: PositiveF64(
                    0.0 < 32.30247627837178,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018057651884895165,
                ),
                max_time: PositiveF64(
                    0.0 < 27.943850717730115,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018180432126424506,
                ),
                max_time: PositiveF64(
                    0.0 < 33.76096444498266,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018323168884948338,
                ),
                max_time: PositiveF64(
                    0.0 < 26.510938204255297,
                ),
                length: 914183,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018358347250724272,
                ),
                max_time: PositiveF64(
                    0.0 < 29.488119051321412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018648793470577019,
                ),
                max_time: PositiveF64(
                    0.0 < 29.279527446643385,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019601434908533832,
                ),
                max_time: PositiveF64(
                    0.0 < 34.54969403293957,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019610334503483706,
                ),
                max_time: PositiveF64(
                    0.0 < 27.324055782356446,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019734109488189766,
                ),
                max_time: PositiveF64(
                    0.0 < 28.313251353030246,
                ),
                length: 631643,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020418091270513195,
                ),
                max_time: PositiveF64(
                    0.0 < 28.501873872571615,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000020419774515723077,
                ),
                max_time: PositiveF64(
                    0.0 < 25.924207615063516,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002061282046994517,
                ),
                max_time: PositiveF64(
                    0.0 < 29.81215245762604,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002115704957894593,
                ),
                max_time: PositiveF64(
                    0.0 < 26.667923102658925,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002183659825183426,
                ),
                max_time: PositiveF64(
                    0.0 < 30.296900039900756,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000023542890800754,
                ),
                max_time: PositiveF64(
                    0.0 < 28.072745368086274,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024172466467353715,
                ),
                max_time: PositiveF64(
                    0.0 < 26.199552764441535,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002437201291338731,
                ),
                max_time: PositiveF64(
                    0.0 < 24.908612909121732,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024486836863735206,
                ),
                max_time: PositiveF64(
                    0.0 < 26.379904759817208,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000246847948331963,
                ),
                max_time: PositiveF64(
                    0.0 < 31.215387250281648,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000024858208166889106,
                ),
                max_time: PositiveF64(
                    0.0 < 27.36393115230176,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000002587864099956594,
                ),
                max_time: PositiveF64(
                    0.0 < 27.801840204214592,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000026994326074447628,
                ),
                max_time: PositiveF64(
                    0.0 < 33.756080412947014,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000027670677499314067,
                ),
                max_time: PositiveF64(
                    0.0 < 34.52132823443331,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030485688018444534,
                ),
                max_time: PositiveF64(
                    0.0 < 30.219933464282676,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032505572608587663,
                ),
                max_time: PositiveF64(
                    0.0 < 28.15777504911448,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032552836581878353,
                ),
                max_time: PositiveF64(
                    0.0 < 29.374314680512764,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032768164356933305,
                ),
                max_time: PositiveF64(
                    0.0 < 26.313517544976015,
                ),
                length: 583463,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003312296218416222,
                ),
                max_time: PositiveF64(
                    0.0 < 26.546293684086265,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000335491299047197,
                ),
                max_time: PositiveF64(
                    0.0 < 29.408325092129846,
                ),
                length: 620588,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000034212007438139125,
                ),
                max_time: PositiveF64(
                    0.0 < 31.275652295499544,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000034546499858012503,
                ),
                max_time: PositiveF64(
                    0.0 < 29.567978421194514,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036253763835425445,
                ),
                max_time: PositiveF64(
                    0.0 < 31.04047128452116,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000036278009463153182,
                ),
                max_time: PositiveF64(
                    0.0 < 28.354609886196084,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003675898513355591,
                ),
                max_time: PositiveF64(
                    0.0 < 29.598558356409292,
                ),
                length: 578913,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000396843141181602,
                ),
                max_time: PositiveF64(
                    0.0 < 29.718311477747523,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004004553551817391,
                ),
                max_time: PositiveF64(
                    0.0 < 26.890443034009834,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004055773490663217,
                ),
                max_time: PositiveF64(
                    0.0 < 28.336704462202427,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004111553997543371,
                ),
                max_time: PositiveF64(
                    0.0 < 28.12724126557221,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000042765226249130706,
                ),
                max_time: PositiveF64(
                    0.0 < 29.77625557684735,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004277806219532554,
                ),
                max_time: PositiveF64(
                    0.0 < 32.2026434670875,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004310387389516723,
                ),
                max_time: PositiveF64(
                    0.0 < 26.186658437925683,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004530364608457127,
                ),
                max_time: PositiveF64(
                    0.0 < 32.90271347993432,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004861336945494177,
                ),
                max_time: PositiveF64(
                    0.0 < 28.668809360607597,
                ),
                length: 575084,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000490689528676036,
                ),
                max_time: PositiveF64(
                    0.0 < 29.13054613455494,
                ),
                length: 584371,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000494395076794385,
                ),
                max_time: PositiveF64(
                    0.0 < 29.7466835436755,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004949021648326113,
                ),
                max_time: PositiveF64(
                    0.0 < 26.34629662066771,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005147056750531842,
                ),
                max_time: PositiveF64(
                    0.0 < 32.81803321356955,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005503005506835024,
                ),
                max_time: PositiveF64(
                    0.0 < 31.34186265161741,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005894297591402253,
                ),
                max_time: PositiveF64(
                    0.0 < 31.819996437187935,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000008292181496727391,
                ),
                max_time: PositiveF64(
                    0.0 < 29.795120847607247,
                ),
                length: 435396,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009531660284667343,
                ),
                max_time: PositiveF64(
                    0.0 < 22.98234152414437,
                ),
                length: 339683,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000013563156942841825,
                ),
                max_time: PositiveF64(
                    0.0 < 30.915653399612513,
                ),
                length: 1000000,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 4.84µs
 - execution: 45.555349847s
 - cleanup: 114.783µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        32            16
 Used       :        18 (peak)  14.15 (ave)

============================================
