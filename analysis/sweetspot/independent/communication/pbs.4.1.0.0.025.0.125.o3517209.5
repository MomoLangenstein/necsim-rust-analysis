# mpiexec: MPI is /apps/mpi/intel/2019.6.166
# mpiexec: No RDMA network found -- using sockets+shared memory
# mpiexec: bootstrapping with /apps/mpi/intel/2019.6.166/bin/__pbs_tmrsh
# mpiexec: full path to program is /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence
# mpiexec: program arguments are: simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9852057997067841293,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517209[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
# mpiexec: 4 ranks allocated via PBS select
# mpiexec: 1 OpenMP threads / rank allocated by PBS select
# mpiexec: Job has shared use of the allocated nodes. Disabling process-pinning
# mpiexec: machinefile configured as:
cx1-137-16-4.cx1.hpc.ic.ac.uk:4
#
# mpiexec: Checking all nodes are ONLINE:
# mpiexec: All nodes appear ONLINE
# mpiexec: launch started at Thu 13 May 07:59:31 BST 2021
# mpiexec: launching program...
# /rds/general/user/ml5717/home/necsim-rust/target-mpi/release/rustcoalescence simulate (
        speciation: 1.0,
        sample: 0.025,
        seed: 9852057997067841293,

        algorithm: Independent(delta_t:2.5, step_slice:10, dedup_cache:Relative(factor:0.1), parallelism_mode:Probabilistic(communication:0.125)),

        scenario: SpatiallyExplicit(
            habitat: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif",
            dispersal: "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif",
        ),
        
        log: "/var/tmp/pbs.3517209[5].pbs/event_log",

        reporters: [
            Plugin(
                library: "/rds/general/user/ml5717/home/necsim-rust/target-mpi/release/deps/libnecsim_plugins_common.so",
                reporters: [Execution(),Biodiversity()],
            ),
        ],
    )
(cx1-137-16-4.cx1.hpc.ic.ac.uk:0,1,2,3)

INFO  Starting to load the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" ...
INFO  Used GDAL no data value -99.0 ...
INFO  Successfully loaded the dispersal map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/dispersal.tif" with dimensions 11700x11700 [cols x rows].
INFO  Starting to load the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" ...
INFO  Used GDAL no data value 0 ...
INFO  Successfully loaded the habitat map "/rds/general/user/ml5717/home/necsim-rust/maps/madingley/fg0size12/habitat.tif" with dimensions 180x65 [cols x rows].
INFO  Parsed simulation arguments:
SimulateArgs {
    common: CommonArgs {
        speciation_probability_per_generation: PositiveUnitF64(
            0.0 < 1 <= 1.0,
        ),
        sample_percentage: ClosedUnitF64(
            0.0 <= 0.025 <= 1.0,
        ),
        seed: 9852057997067841293,
        algorithm: Independent(
            IndependentArguments {
                delta_t: PositiveF64(
                    0.0 < 2.5,
                ),
                step_slice: 10,
                dedup_cache: Relative(
                    RelativeDedupCache {
                        factor: PositiveF64(
                            0.0 < 0.1,
                        ),
                    },
                ),
                parallelism_mode: Probabilistic(
                    ProbabilisticParallelismMode {
                        communication_probability: ClosedUnitF64(
                            0.0 <= 0.125 <= 1.0,
                        ),
                    },
                ),
            },
        ),
    },
    event_log: Some(
        EventLogRecorder {
            segment_size: 1000000,
            directory: "/var/tmp/pbs.3517209[5].pbs/event_log/0",
            segment_index: 0,
            buffer: Vec<Event; 0>,
        },
    ),
    scenario: SpatiallyExplicit(
        InMemoryArguments {
            habitat_map: Array2D {
                array: Box [ 0x7fff73473738; 11700 ],
                num_rows: 65,
                num_columns: 180,
            },
            dispersal_map: Array2D {
                array: Box [ 0x7fff73473758; 136890000 ],
                num_rows: 11700,
                num_columns: 11700,
            },
        },
    ),
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  The simulation will log its events to "/var/tmp/pbs.3517209[5].pbs/event_log/0".
WARN  Therefore, only progress will be reported live.
INFO  The simulation will be distributed across 4 partitions.


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 9.764679024s
 - execution: 21.389680773s
 - cleanup: 24.341397ms

=============================== Reporter Summary ===============================

INFO  The simulation finished at time 35.31247898556905 after 105304286 steps.

# mpiexec: finished at Thu 13 May 08:00:04 BST 2021
INFO  Parsed replay arguments:
ReplayArgs {
    log: EventLogReplay {
        frontier: [
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000019791540906144434,
                ),
                max_time: PositiveF64(
                    0.0 < 26.62857101399394,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000005465580266150738,
                ),
                max_time: PositiveF64(
                    0.0 < 27.24123161298101,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000006106325195487372,
                ),
                max_time: PositiveF64(
                    0.0 < 32.83546841482841,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007477002433864399,
                ),
                max_time: PositiveF64(
                    0.0 < 29.64568780458224,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000007731416007406011,
                ),
                max_time: PositiveF64(
                    0.0 < 33.62175364710289,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000008750109609101386,
                ),
                max_time: PositiveF64(
                    0.0 < 26.767529500460412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000000894199364553927,
                ),
                max_time: PositiveF64(
                    0.0 < 27.530510677825475,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000010166075287143528,
                ),
                max_time: PositiveF64(
                    0.0 < 25.65900526941059,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000011664205906702918,
                ),
                max_time: PositiveF64(
                    0.0 < 26.505144007598304,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001209910832633554,
                ),
                max_time: PositiveF64(
                    0.0 < 29.273586687164915,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001262169391225143,
                ),
                max_time: PositiveF64(
                    0.0 < 28.370904364320523,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001326125081968499,
                ),
                max_time: PositiveF64(
                    0.0 < 29.16625807220321,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000001864446222410443,
                ),
                max_time: PositiveF64(
                    0.0 < 31.368200891213878,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000018732102813334706,
                ),
                max_time: PositiveF64(
                    0.0 < 28.25788890112729,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000020078629897612998,
                ),
                max_time: PositiveF64(
                    0.0 < 28.90321971128055,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021076220574345328,
                ),
                max_time: PositiveF64(
                    0.0 < 31.023891072298863,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000021461217414309175,
                ),
                max_time: PositiveF64(
                    0.0 < 29.334035139308575,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000025064620101655777,
                ),
                max_time: PositiveF64(
                    0.0 < 28.016458584778462,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000030907800790958007,
                ),
                max_time: PositiveF64(
                    0.0 < 30.81512903393643,
                ),
                length: 667843,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000031150224594211906,
                ),
                max_time: PositiveF64(
                    0.0 < 27.41300398046521,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003609881310540075,
                ),
                max_time: PositiveF64(
                    0.0 < 26.934036917355098,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000003612773610828235,
                ),
                max_time: PositiveF64(
                    0.0 < 26.63485054179885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004030958528078443,
                ),
                max_time: PositiveF64(
                    0.0 < 28.841350093471622,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000004918508753060102,
                ),
                max_time: PositiveF64(
                    0.0 < 27.70555994718274,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005289250279427726,
                ),
                max_time: PositiveF64(
                    0.0 < 28.919414915460425,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005503957808961069,
                ),
                max_time: PositiveF64(
                    0.0 < 27.11733361084553,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000005955591772521807,
                ),
                max_time: PositiveF64(
                    0.0 < 26.73600109003602,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006002792637960219,
                ),
                max_time: PositiveF64(
                    0.0 < 30.023000586083025,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006251855808048212,
                ),
                max_time: PositiveF64(
                    0.0 < 27.92942645141673,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006562137888632691,
                ),
                max_time: PositiveF64(
                    0.0 < 27.245359635581636,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006667566912477163,
                ),
                max_time: PositiveF64(
                    0.0 < 30.917841967206996,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006808615651832106,
                ),
                max_time: PositiveF64(
                    0.0 < 26.224417869305245,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000006854425807500952,
                ),
                max_time: PositiveF64(
                    0.0 < 27.75049457469695,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000721730381292307,
                ),
                max_time: PositiveF64(
                    0.0 < 28.015530260187408,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007243025845760087,
                ),
                max_time: PositiveF64(
                    0.0 < 27.21354713861952,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007310742147770277,
                ),
                max_time: PositiveF64(
                    0.0 < 32.15400809027805,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000731351453009399,
                ),
                max_time: PositiveF64(
                    0.0 < 29.871621413290352,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007496914036786428,
                ),
                max_time: PositiveF64(
                    0.0 < 26.564829476382545,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007557985876038842,
                ),
                max_time: PositiveF64(
                    0.0 < 29.77991246474209,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007804938209621248,
                ),
                max_time: PositiveF64(
                    0.0 < 26.09909441019788,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007896375645022324,
                ),
                max_time: PositiveF64(
                    0.0 < 32.17337909938587,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007962055201260476,
                ),
                max_time: PositiveF64(
                    0.0 < 29.101934496191753,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000007966572254658466,
                ),
                max_time: PositiveF64(
                    0.0 < 27.713362425645315,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008370275453306597,
                ),
                max_time: PositiveF64(
                    0.0 < 29.213320989533184,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008414066168804801,
                ),
                max_time: PositiveF64(
                    0.0 < 25.878949270021376,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000008509772073117539,
                ),
                max_time: PositiveF64(
                    0.0 < 35.31247898556905,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000000931811011961603,
                ),
                max_time: PositiveF64(
                    0.0 < 28.07420929978379,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010187547072604275,
                ),
                max_time: PositiveF64(
                    0.0 < 29.957009113724,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010412873624465746,
                ),
                max_time: PositiveF64(
                    0.0 < 29.43818373565195,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010428938101991747,
                ),
                max_time: PositiveF64(
                    0.0 < 29.18019549432647,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010695634597435166,
                ),
                max_time: PositiveF64(
                    0.0 < 26.61110055199099,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000010830962610119954,
                ),
                max_time: PositiveF64(
                    0.0 < 25.646716176435824,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000011814674513721535,
                ),
                max_time: PositiveF64(
                    0.0 < 30.0428588875917,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012090357776051164,
                ),
                max_time: PositiveF64(
                    0.0 < 29.14563163706773,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012097866267102297,
                ),
                max_time: PositiveF64(
                    0.0 < 27.03307499889794,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000012681429209515649,
                ),
                max_time: PositiveF64(
                    0.0 < 28.430987459878857,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013238682380900535,
                ),
                max_time: PositiveF64(
                    0.0 < 26.419197566426487,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000013967791839819554,
                ),
                max_time: PositiveF64(
                    0.0 < 28.937013722762398,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014922880903212032,
                ),
                max_time: PositiveF64(
                    0.0 < 31.98101198130598,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000014980551749088633,
                ),
                max_time: PositiveF64(
                    0.0 < 28.478012967643885,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015297941663439119,
                ),
                max_time: PositiveF64(
                    0.0 < 28.915259378796808,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000015429081273721224,
                ),
                max_time: PositiveF64(
                    0.0 < 30.239833798228155,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017163432625144637,
                ),
                max_time: PositiveF64(
                    0.0 < 25.634762999022726,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000017304289021136121,
                ),
                max_time: PositiveF64(
                    0.0 < 28.10395243167553,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000001821570930482519,
                ),
                max_time: PositiveF64(
                    0.0 < 33.04632199730914,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000018282699099092525,
                ),
                max_time: PositiveF64(
                    0.0 < 28.44125079887412,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000019414810287221584,
                ),
                max_time: PositiveF64(
                    0.0 < 30.54400487427245,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021038717723520506,
                ),
                max_time: PositiveF64(
                    0.0 < 27.515034460226428,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021258431859294546,
                ),
                max_time: PositiveF64(
                    0.0 < 29.78187897372852,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000021629018509550235,
                ),
                max_time: PositiveF64(
                    0.0 < 28.086646248509645,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000022915721553662394,
                ),
                max_time: PositiveF64(
                    0.0 < 29.878209536365862,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000029214885069461793,
                ),
                max_time: PositiveF64(
                    0.0 < 26.955719734946427,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000030972100334425434,
                ),
                max_time: PositiveF64(
                    0.0 < 29.831137255084123,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000031104903064349543,
                ),
                max_time: PositiveF64(
                    0.0 < 29.290346780432486,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000032351313949963156,
                ),
                max_time: PositiveF64(
                    0.0 < 28.66347625034685,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000033010829739166248,
                ),
                max_time: PositiveF64(
                    0.0 < 25.367878051667777,
                ),
                length: 312692,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003391069696989657,
                ),
                max_time: PositiveF64(
                    0.0 < 26.24037134726707,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000034642996157852046,
                ),
                max_time: PositiveF64(
                    0.0 < 26.74285862220581,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003488688340991253,
                ),
                max_time: PositiveF64(
                    0.0 < 27.172620501802648,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000034918207852951966,
                ),
                max_time: PositiveF64(
                    0.0 < 29.683950169878884,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000374998764068879,
                ),
                max_time: PositiveF64(
                    0.0 < 25.250843529205667,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003838325274563292,
                ),
                max_time: PositiveF64(
                    0.0 < 25.64606941859499,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003883057389519884,
                ),
                max_time: PositiveF64(
                    0.0 < 34.163766994113715,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003943250664051323,
                ),
                max_time: PositiveF64(
                    0.0 < 33.3356452089227,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000003964115374566202,
                ),
                max_time: PositiveF64(
                    0.0 < 25.591530564131602,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004048055840810694,
                ),
                max_time: PositiveF64(
                    0.0 < 34.412315371468196,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004214128156987407,
                ),
                max_time: PositiveF64(
                    0.0 < 29.599505676372434,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004482935062610771,
                ),
                max_time: PositiveF64(
                    0.0 < 34.01508670483906,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000048542262198747466,
                ),
                max_time: PositiveF64(
                    0.0 < 31.855472171757576,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004946723688170618,
                ),
                max_time: PositiveF64(
                    0.0 < 29.272407649726784,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004982555545651746,
                ),
                max_time: PositiveF64(
                    0.0 < 25.449966858421085,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000004990248208824877,
                ),
                max_time: PositiveF64(
                    0.0 < 29.345943585369874,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005100862076334867,
                ),
                max_time: PositiveF64(
                    0.0 < 26.952654367870743,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005303564797887184,
                ),
                max_time: PositiveF64(
                    0.0 < 30.024145245102183,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005459585771250275,
                ),
                max_time: PositiveF64(
                    0.0 < 30.093021297137156,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000058231317881518585,
                ),
                max_time: PositiveF64(
                    0.0 < 26.702565288281207,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000058597237523327905,
                ),
                max_time: PositiveF64(
                    0.0 < 28.61806252391559,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000005864322793758259,
                ),
                max_time: PositiveF64(
                    0.0 < 27.295052438472766,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000006218465209428814,
                ),
                max_time: PositiveF64(
                    0.0 < 25.103170812660842,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000063617682122263375,
                ),
                max_time: PositiveF64(
                    0.0 < 25.76844666645553,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000069950784109540365,
                ),
                max_time: PositiveF64(
                    0.0 < 29.505724610553838,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.0000075906276639226,
                ),
                max_time: PositiveF64(
                    0.0 < 24.317128017016685,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00000893299887672061,
                ),
                max_time: PositiveF64(
                    0.0 < 24.268629025600866,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000009528240862699544,
                ),
                max_time: PositiveF64(
                    0.0 < 31.007047356812688,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.000010885190453446825,
                ),
                max_time: PositiveF64(
                    0.0 < 33.623996441828346,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001130517857328428,
                ),
                max_time: PositiveF64(
                    0.0 < 28.868526722671657,
                ),
                length: 1000000,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00001566395717078617,
                ),
                max_time: PositiveF64(
                    0.0 < 26.368161588333567,
                ),
                length: 296441,
            },
            SortedSortedSegments {
                segments: Vec<SortedSegment; 1>,
                min_time: PositiveF64(
                    0.0 < 0.00009283404693222197,
                ),
                max_time: PositiveF64(
                    0.0 < 28.936673167872907,
                ),
                length: 27310,
            },
        ],
        with_speciation: true,
        with_dispersal: false,
    },
    reporters: ReportSpeciationIgnoreDispersalReportProgress(
        ReporterPluginVec {
            plugins: [
                ExecutionTimeReporter {
                    start_time: None,
                    end_time: None,
                },
                BiodiversityReporter {
                    biodiversity: 0,
                },
            ],
        },
    ),
}
INFO  Starting event replay ...


=============================== Reporter Summary ===============================

INFO  The simulation took:
 - initialisation: 1.641µs
 - execution: 36.969323972s
 - cleanup: 45.432µs
INFO  The simulation resulted in a biodiversity of 105304286 unique species.

=============================== Reporter Summary ===============================

INFO  The event replay has completed.

============================================

        Job resource usage summary 

                 Memory (GB)    NCPUs
 Requested  :        16             4
 Used       :         7 (peak)   4.00 (ave)

============================================
